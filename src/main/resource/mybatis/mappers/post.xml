<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="post">
	
	
	
	<insert id="insert" parameterType="postvo">
		<![CDATA[
			insert into post(title, content, regdate, post_image, publish, users_no, hits, shared) values
				(#{title},#{content}, now(), #{post_image}, #{publish}, #{users_no}, 0, #{shared});
		]]>
	</insert>
	
	<select id="getPostList" parameterType="int" resultType="postvo">
		<![CDATA[
		select users_no, post_no, title, content, regdate, post_image, publish from post 
	 	where post.users_no = #{users_no} order by post_no desc
		]]>
	</select>
	
	<select id = "getListByPage" parameterType="map" resultType="postvo">
		<![CDATA[
		 select b.users_no, a.post_no, a.title, a.post_image, a.content, date_format(a.regdate, '%Y %m/%e %h:%i') as regdate , a.publish
 		 from post a, users b where b.users_no = a.users_no and b.users_no = #{users_no} and a.users_no > 0
 		 order by a.post_no desc
 		 limit #{page }, 9;
		]]>
	</select>
	
	<select id = "getIndexByPostTop9" parameterType="int" resultType="postvo">
		<![CDATA[
		 select b.users_no, a.post_no ,a.title, date_format(a.regdate, '%Y %m/%e %h:%i') as regdate , a.publish, a.post_image
 		 from post a, users b where b.users_no = a.users_no and b.users_no = #{users_no} and a.users_no > 0
 		 order by a.post_no desc limit 0, 9;
		]]>
	</select>
	
	<select id = "getPost" parameterType="int" resultType = "postvo">
		<![CDATA[
			SELECT a.post_no, a.title, a.content, a.regdate, a.post_image, a.publish, b.nickname, 
			(select count(*) from post_comments bc where a.post_no = bc.post_no) as count FROM post a, users b  
			WHERE a.users_no = b.users_no and a.post_no = #{post_no}
		]]>
	</select>
	
	
	<select id = "postdelete" parameterType="int" >
		<![CDATA[
		delete from post where post_no= #{post_no}
		]]>
	</select>
	
	<select id="getMainPostList" resultType="postvo">
		<![CDATA[
		 select b.post_no, b.title, b.shared,  b.content, date_format(b.regdate, '%Y. %m.%e. %h:%i') as regdate, b.hits, b.users_no, u.nickname
		 from post b, users u 
		 where b.users_no = u.users_no and b.shared = 1 order by regdate desc limit 4;
		]]>
	</select>
	
	
	<update id="post_image_insert" parameterType="postvo">
		update post set post_image = #{post_image} where post_no = #{post_no]};
	</update>
	
	<!--                 			Reply								 -->
	<select id="postfetchReply" parameterType="int" resultType="postcommentsvo">

	<![CDATA[
		select pc.comments_no, pc.content, pc.regdate, pc.post_no, pc.users_no, 
						u.nickname, u.users_image, (select count(*) FROM board_chat pChat
						where pc.post_no = #{post_no } and pc.comments_no = pChat.comments_no) as count
		from post_comments pc, users u
		where pc.post_no = #{post_no } and pc.users_no = u.users_no
	]]>
	</select>

	<insert id="writePostReply" parameterType="postcommentsvo">
	
	<![CDATA[
		insert INTO post_comments(content, regdate, post_no, users_no) VALUES (#{content }, now(), #{post_no }, #{users_no })
	]]>
	
	    <selectKey resultType="int" keyProperty="comments_no" order="AFTER">
	        SELECT LAST_INSERT_ID()  
	    </selectKey>
	
	</insert>
		
	<select id="countPostReply" parameterType="int" resultType="int">
	<![CDATA[
	
	select count(*) from post_comments a where a.post_no= #{post_no }
	
	]]>
	</select>
	
	<select id="getPostReply" parameterType="int" resultType="postcommentsvo">
	<![CDATA[
	
		select pc.comments_no, pc.content, pc.regdate, pc.post_no, pc.users_no, u.nickname, u.users_image
		from post_comments pc, users u
		where pc.comments_no = #{comments_no } and pc.users_no = u.users_no
	
	]]>
	</select>
	
	
	<!--                 			Reply Chat							 -->
	<select id="fetchReplyPostChat" parameterType="int" resultType="postchatvo">
	<![CDATA[
	
		select pc.post_chat_no, pc.content, pc.regdate, pc.comments_no, pc.users_no, u.nickname, u.users_image
	 	from post_chat pc, users u 
	 	where pc.comments_no = #{comments_no} and u.users_no = pc.users_no;
	
	]]>
	</select>
	
	<insert id="writeReplyPostChat" parameterType="postchatvo">

	<![CDATA[
		insert INTO post_chat(content, regdate, comments_no, users_no) VALUES (#{content }, now(), #{comments_no }, #{users_no })
	]]>
	
	    <selectKey resultType="int" keyProperty="post_chat_no" order="AFTER">
	        SELECT LAST_INSERT_ID()  
	    </selectKey>
	
	</insert>
	
	<select id="getReplyPostChat" parameterType="int" resultType="postchatvo">
	<![CDATA[
		select pc.post_chat_no, pc.content, pc.regdate, pc.comments_no, pc.users_no, u.nickname, u.users_image
		from post_chat pc, users u
		where pc.post_chat_no = #{post_chat_no } and pc.users_no = u.users_no
	]]>
	</select>
	
	<select id="countReplyPostChat" parameterType="int" resultType="int">
		<![CDATA[
		select count(*) from post_chat pc where pc.comments_no = #{comments_no }
		]]>
</select>

<!--  ********************************* 캡쳐 템플릿 ******************************* -->	
	<!--  (1) 오늘 날짜에 캡쳐사진이 있는지 ??? -->
	<select id="captureCheck" parameterType="map" resultType="int">
		<![CDATA[
			select count( capture_no )
					from capture a
				where a.regdate = #{regdate} and a.users_no = #{authUser_no};
		]]>
	</select>
	<!--  (2) 캡쳐 사진들 땡겨오기 -->
	<select id="pullCapture" parameterType="int">
		<![CDATA[
		
		]]>
	</select>

</mapper>
